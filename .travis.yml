# This is a special configuration file to run tests on Travis-CI via
# GitHub notifications when changes are committed.
#
# This file is not intended for end users of the Galaxy BLAST+ tools.
#
# For technical details, see http://travis-ci.org/ and this blog post
# for background,
# http://blastedbio.blogspot.com/2013/09/using-travis-ci-for-testing-galaxy-tools.html

# Galaxy currently only supports Python 2.6
language: python
matrix:
  include:
    - python: "2.7"
      env: GALAXY_BRANCH=master
    - python: "2.7"
      env: GALAXY_BRANCH=dev

# We don't need sudo so can avoid slower legacy TravisCI infrastructure
sudo: false

# Planemo Lint
# ============
#
# Planemo can be run to check tools separately from Galaxy, and this
# is fast so we do it *before* the slow process of installing Galaxy
# and running the tool tests.
#
# Installing Galaxy
# =================
#
# We define extra datatypes, and therefore install a Galaxy instance
# and add the datatypes to it.
#
#
# Installing Tool Dependencies
# ============================
#
# We also need to install our tool dependencies, e.g. NCBI BLAST+ binaries,
# which we will do manually rather than via a (local) Galaxy Tool Shed.

before_install:
 - "if grep -P '\t' *.rst */*/*.rst; then echo 'Tabs are bad, please use four spaces.'; false; fi"
 - "if grep -P '\t' */*/*.xml; then echo 'Tabs are bad, please use four spaces.'; false; fi"
 - "if grep -P '\t' */*/.shed.yml; then echo 'Tabs are bad, please use four spaces.'; false; fi"
 - pip install --upgrade pip setuptools
 - pip install planemo flake8 restructuredtext-lint
 - echo "Using planemo lint to check for obvious tool errors"
 - planemo shed_lint --tools --no_xsd --fail_level error --ensure_metadata -r ${TRAVIS_BUILD_DIR}
 - echo "Using flake8 to check Python code"
 - flake8 --max-line-length 252 --ignore E402 .
 - echo "Using restructuredtext-lint to check our RST files"
 - restructuredtext-lint *.rst */*/*.rst
 - echo "Removing tools we're not going to test"
 - for line in $(cat .tt_blacklist); do rm -rf $line; done
 - echo "Fixing permissions on Python eggs cache folder"
 - mkdir -p "$HOME/.python-eggs"
 - chmod 700 "$HOME/.python-eggs" 
 - echo "Downloading and setting up dependencies..."
 - export INSTALL_DIR=/tmp/dep_install && mkdir $INSTALL_DIR
 - export DOWNLOAD_CACHE=/tmp/download_cache && mkdir $DOWNLOAD_CACHE
 - planemo dependency_script ${TRAVIS_BUILD_DIR}/packages/package_blast_plus_2_5_0
 - bash dep_install.sh
 - source env.sh
 - echo "Fetching Galaxy ${GALAXY_BRANCH} branch..."
 - cd ${TRAVIS_BUILD_DIR}
 - wget https://codeload.github.com/galaxyproject/galaxy/tar.gz/${GALAXY_BRANCH}
 - tar -zxvf ${GALAXY_BRANCH} | tail
 - cd galaxy-${GALAXY_BRANCH}


# Configuring tools within Galaxy
# ===============================
#
# We setup our datatypes by adding blast.py to the Galaxy library folder,
# and replacing the datatypes_conf.xml file.
#
# Note that as of October 2016, the Galaxy datatypes are back in the
# Galaxy core. Therefore we'll over-write them if needed.

install:
 - cd ${TRAVIS_BUILD_DIR}/galaxy-${GALAXY_BRANCH}
 - export GALAXY_TEST_UPLOAD_ASYNC=false
 - export GALAXY_TEST_DB_TEMPLATE=https://github.com/jmchilton/galaxy-downloads/raw/master/db_gx_rev_0127.sqlite
 - rm -f lib/galaxy/datatypes/blast.py
 - ln -s ${TRAVIS_BUILD_DIR}/datatypes/blast_datatypes/blast.py lib/galaxy/datatypes/blast.py
 - ln -s ${TRAVIS_BUILD_DIR}/.travis.datatypes_conf.xml datatypes_conf.xml
 - bash scripts/common_startup.sh --no-create-venv --dev-wheels


# Testing tools in Galaxy
# =======================
#
# Having setup our Galaxy with our datatypes, and dependencies,
# call planemo test

script:
 - cd ${TRAVIS_BUILD_DIR}
 - planemo test --no_conda_auto_install --galaxy_root ${TRAVIS_BUILD_DIR}/galaxy-${GALAXY_BRANCH} --skip_venv tools/

notifications:
  email: false


# Deployment
# ==========
# Assumes you have set $TTS_KEY in the TravisCI interface,
# trusts that other than the blacklist removal (good),
# everything is still pristine and therefore OK for upload.
#
# Would ideally only do this if our tests passed on BOTH
# Galaxy's stable and dev branches.
#
after_success:
  - |
    if [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_BRANCH" == "master" ] && [ "$GALAXY_BRANCH" == "dev" ]; then
      planemo shed_update --shed_target testtoolshed --force_repository_creation --check_diff --shed_key_from_env TTS_KEY -r datatypes/ packages/ tools/ workflows/
    fi
